apiVersion: apps/v1
kind: Deployment
metadata:
  name: standup-notifier
  labels:
    app: standup-notifier
spec:
  replicas: 1
  selector:
    matchLabels:
      app: standup-notifier
  template:
    metadata:
      labels:
        app: standup-notifier
    spec:
      #securityContext:
      #  runAsUser: 1000
      #  runAsGroup: 1000
      #  fsGroup: 1000
      volumes:
        - name: standup-notifier-log
          hostPath:
            path: "/var/log/standup-notifier"
      containers:
        - name: standup-notifier
          image: standup-slack-bot:latest
          imagePullPolicy: Never
          args: ["standup:notify", "--env=prod"]
          volumeMounts:
            - name: standup-notifier-log
              mountPath: /var/log
              readOnly: false
          env:
            - name: SLACK_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: slack-api-secret
                  key: client-id
            - name: SLACK_SECRET
              valueFrom:
                secretKeyRef:
                  name: slack-api-secret
                  key: secret
            - name: SLACK_SIGNING_SECRET
              valueFrom:
                secretKeyRef:
                  name: slack-api-secret
                  key: signing-secrent
            - name: DEBUG
              value: "true"
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: redis-configmap
                  key: service
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: service
            - name: DB_DATABASE
              value: standup
            - name: DB_USERNAME
              value: postgres
            - name: LOG_DIR
              value: "/var/log"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password