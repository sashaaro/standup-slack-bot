apiVersion: apps/v1
kind: Deployment
metadata:
  name: standup-ui
  labels:
    app: standup-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: standup-ui
  template:
    metadata:
      labels:
        app: standup-ui
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      initContainers:
        - name: create-db
          image: postgres:13.1-alpine
          env:
            - name: PGHOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: service
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password
          command:
            - "bash"
            - "-c"
            - |
              psql -U postgres -c "CREATE DATABASE standup" || echo "Already exists"
        - name: create-schema
          image: registry.digitalocean.com/simple/standup-slack-bot:latest
          #imagePullPolicy: Never #uncommend if use minikube
          #securityContext:
          #  runAsUser: node
          #  runAsNonRoot: true
          #  runAsGroup: node
          args: ["database:migrate"]
          env: &appEnv
            - name: SLACK_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: slack-api-secret
                  key: client-id
            - name: SLACK_SECRET
              valueFrom:
                secretKeyRef:
                  name: slack-api-secret
                  key: secret
            - name: SLACK_SIGNING_SECRET
              valueFrom:
                secretKeyRef:
                  name: slack-api-secret
                  key: signing-secrent
            - name: BOT_USER_OAUTH_ACCESS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: slack-api-secret
                  key: bot-user-oauth-access-token
            - name: DEBUG
              value: "true"
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: redis-configmap
                  key: service
            - name: DB_HOST
              valueFrom:
                configMapKeyRef:
                  name: postgres-configmap
                  key: service
            - name: DB_DATABASE
              value: standup
            - name: DB_USERNAME
              value: postgres
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: postgres-password
        - name: fixture-db
          image: registry.digitalocean.com/simple/standup-slack-bot:latest
          # imagePullPolicy: Never
          args: [ "database:fixture"]
          env: *appEnv
      containers:
        - name: standup-ui
          image: registry.digitalocean.com/simple/standup-slack-bot:latest
          #imagePullPolicy: Never
          args: ["server:run", "--type=ui", "--listen=3000", "--env=prod"]
          ports:
            - containerPort: 3000
          env: *appEnv
---
apiVersion: v1
kind: Service
metadata:
  name: standup-ui-service
spec:
  selector:
    app: standup-ui
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
