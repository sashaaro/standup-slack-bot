version: "3.7"

volumes:
  postgres_data: ~
  ui_sock: ~
  slack-api_sock: ~

x-base-image: &base-image
  image: standup-slack-bot:latest
  build: &service_app
    dockerfile: deploy/Dockerfile
    context: .

services:
  nginx:
    image: nginx:1.18-alpine
    #user: 1000:1000
    ports:
      - "3000:3000"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - ui_sock:/var/run/standup-slack-bot-ui
      - slack-api_sock:/var/run/standup-slack-bot-api

  ui:
    <<: *base-image
    command: ["server:run", "--type=ui", "--listen=/var/run/standup-slack-bot-ui", "--env=prod"]
    user: 1000:1000
    environment:
      - APP_CONTEXT=ui
    depends_on:
      - postgres
    volumes:
      - ui_sock:/var/run/standup-slack-bot-ui
      - ./var:/opt/app/var

  slack-api:
    <<: *base-image
    command: ["server:run", "--type=slack-api", "--listen=/var/run/standup-slack-bot-api", "--env=prod"]
    user: 1000:1000
    environment:
      - APP_CONTEXT=slack-api
    depends_on:
      - postgres
    volumes:
      - slack-api_sock:/var/run/standup-slack-bot-api
      - ./var:/opt/app/var

  standup-notifier:
    <<: *base-image
    command: ["standup:notify", "--env=prod"]
    user: 1000:1000
    environment:
      - APP_CONTEXT=standup-notifier
    depends_on:
      - postgres
    volumes:
      - ./var:/opt/app/var

  queue-consumer:
    build:
      <<: *service_app
    command: ["queue:consume", "--env=prod"]
    user: 1000:1000
    environment:
      - APP_CONTEXT=queue-consumer
    depends_on:
      - postgres
    volumes:
      - ./var:/opt/app/var

  postgres:
    image: postgres:12.2-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6.0.1-alpine
