version: "3.7"

volumes:
  postgres_data: ~
  ui_sock: ~
  slack-api_sock: ~

x-base-image: &base-image
  image: standup-slack-bot:latest
  build:
    dockerfile: deploy/Dockerfile
    context: .

services:
  nginx:
    build:
      dockerfile: deploy/nginx.Dockerfile
      context: .
    ports:
      - "3000:3000"
    volumes:
      - ./deploy/nginx.conf:/etc/nginx/conf.d/default.conf
      - ui_sock:/tmp/ui
      - slack-api_sock:/tmp/slack-api

  ui:
    <<: *base-image
    command: ["server:run", "--type=ui", "--listen=/tmp/node.sock", "--env=prod"]
    user: 1000:1000
    depends_on:
      - postgres
      - redis
    volumes:
      - ui_sock:/tmp
      - ./var:/opt/app/var

  slack-api:
    <<: *base-image
    command: ["server:run", "--type=slack-api", "--listen=/tmp/node.sock", "--env=prod"]
    user: 1000:1000
    depends_on:
      - postgres
      - redis
    volumes:
      - slack-api_sock:/tmp
      - ./var:/opt/app/var

  standup-notifier:
    <<: *base-image
    command: ["standup:notify", "--env=prod"]
    user: 1000:1000
    environment:
      #- DEBUG=true
    depends_on:
      - postgres
      - redis
    volumes:
      - ./var:/opt/app/var

  queue-consumer:
    <<: *base-image
    command: ["queue:consume", "--env=prod"]
    user: 1000:1000
    environment:
      #- DEBUG=true
    depends_on:
      - postgres
      - redis
    volumes:
      - ./var:/opt/app/var

  postgres:
    image: postgres:13.1-alpine
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6.0.9-alpine
