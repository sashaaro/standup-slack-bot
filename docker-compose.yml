version: "3.7"

volumes:
  postgres_data: ~

services:
  serve:
    image: node:16.13-alpine
    entrypoint: npm
    command: ["run", "watch"]
    user: 1000:1000
    tty: true
    ports:
      - "3001:3000"
      - "9229:9229"
    volumes:
      - .:/opt/app
    working_dir: /opt/app
    #volumes:
    #  - ./..:/opt/app
    #working_dir: /opt/app/standup-slack-bot
    #depends_on:
    #  - postgres

  postgres:
    image: postgres:14.3-alpine
    ports:
      - "5435:5432"
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.0.2-alpine

  #openapi-generator:
  #  image: openapitools/openapi-generator-cli:v5.4.0
  #  user: "1000"
  #  volumes:
  #    - .:/opt/app
  #  environment:
  #    JAVA_OPTS: >
  #      -Dio.swagger.parser.util.RemoteUrl.trustAll=true -Dio.swagger.v3.parser.util.RemoteUrl.trustAll=true
  #  command: generate -i http://serve:3000/api/doc/swagger.yaml -g typescript-angular -o /opt/app/frontend/src/api/auto -p modelPropertyNaming=original -p ngVersion11.0.0
  #  working_dir: /opt/app

  #tunnel:
  #  image: jpillora/chisel:latest
  #  network_mode: host
  #  command: "client botenza.net:8080 R:3000:3000"

  ngrok:
    image: ngrok/ngrok:alpine
    network_mode: host
    command: 'http 3001'
    environment:
      - NGROK_AUTHTOKEN="5JQkpVKmfEKtnDuiGSznS_tzZ5SqpbpJ9Re3JdHjj5"
