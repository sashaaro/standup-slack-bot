openapi: 3.0.1
info:
  title: Standup bot api
  description: Standup bot api
  contact:
    email: sashaaro@gmail.com
  version: 1.0.0
tags:
  - name: auth
    description: Everything about auth
servers:
  - url: https://standup.botenza.com/api
paths:
  /auth/session:
    get:
      tags:
        - auth
      operationId: getSession
      responses:
        200:
          description: Get session
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        404:
          description: Session not found
          content: {}
      x-codegen-request-body-name: body
  /auth/logout:
    get:
      tags:
        - auth
      operationId: logout
      responses:
        301:
          description: Redirect
          content: {}
        200:
          description: Success logout
          content: {}
  /team:
    get:
      tags:
        - team
      operationId: getTeams
      parameters:
        - name: status
          in: query
          required: false
          schema:
            type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Team'
    post:
      tags:
        - team
      operationId: createTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        400:
          description: Fail
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationError'
  /team/{id}:
    get:
      tags:
        - team
      operationId: getTeam
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    put:
      tags:
        - team
      operationId: updateTeam
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        204:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        400:
          description: Fail
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ValidationError'
  /team/{id}/status:
    patch:
      tags:
        - team
      operationId: updateStatus
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /user:
    get:
      tags:
        - user
      operationId: getUsers
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /timezone:
    get:
      tags:
        - timezone
      operationId: getTimezones
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Timezone'
  /channel:
    get:
      tags:
        - channel
      operationId: getChannels
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Channel'
  /team/{teamId}/standup:
   get:
     tags:
       - standup
     operationId: getStandups
     parameters:
       - name: teamId
         in: path
         required: true
         schema:
           type: integer
           format: int64
           minimum: 1
       - name: page
         in: query
         required: false
         schema:
           type: integer
           minimum: 1
           default: 5
     responses:
       200:
         description: Success
         #headers:
         # X-Total
         content:
           application/json:
             schema:
               type: array
               items:
                 $ref: '#/components/schemas/Standup'
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: integer
          format: int64
    Team:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        status:
          type: integer
        start:
          type: string
        duration:
          type: integer
        timezone:
          $ref: '#/components/schemas/Timezone'
        reportChannel:
          $ref: '#/components/schemas/Channel'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    Question:
      type: object
      properties:
        id:
          type: integer
        index:
          type: integer
        text:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/Option'
        createdAt:
          type: date
    Option:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        updatedAt:
          type: date
        createdAt:
          type: date
    ValidationError:
      type: object
      properties:
        children:
          type: array
          items:
            $ref: '#/components/schemas/ValidationError'
        constraints:
          type: object
          additionalProperties:
            type: string
        property:
          type: string
    Timezone:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: integer
          format: int64
        utc_offset:
          type: object
          properties:
            hours:
              type: integer
            minutes:
              type: integer
    Channel:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: integer
          format: int64
    Standup:
      type: object
      properties:
        id:
          type: integer
        startAt:
          type: string
        endAt:
          type: string
        users:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              image:
                type: string
              questions:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    text:
                      type: string
                    option:
                      type: string
                    answer:
                      type: string