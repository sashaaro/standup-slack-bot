extends layout/authorized_main

block authorized_content
    .ui.grid
        .alert.alert--gray.deactivate-bot-block
            div
                | Deactivate bot for
                a(href='https://' + team.domain + '.slack.com/messages/' + channel.id + '/details' target="blank")= " #" + channel.name
                |  channel
            code
                span= "/kick "
                a= "@daily_standup"

        .two.column.large.screen.only.row
            .column
                h3.ui.header= "Stan-up settings"
                form.ui.form(method='post')
                    .field
                        label= 'Days'
                        div
                            each weekDay in weekDays
                                .ui.checkbox
                                    input(type="checkbox")
                                    label= weekDay
                    .field
                        label= 'Locale timezone'
                        select.dropdown.form-control(name="timezone")
                            each timezone, index in timezones
                                - var selected = channel.timezone && channel.timezone.id == timezone.id
                                option(value=timezone.id, selected=selected)= timezone.label
                    .field
                        label= 'Start meeting (locale time)'
                        input.form-control(name="start", type="time", step="60", value=channel.start)
                    .field
                        label= 'Duration'
                        input.form-control(name="duration", type="number", step="5", value= channel.duration)
                    button.ui.button.fluid.positive(type="submit")
                        i.save.icon
                        | Save settings
            .column
                h3.ui.header= "Questions"
                form#question.ui.form(method='post')
                    draggable(:list="questions", v-bind="dragOptions", handle=".icon.movable")
                        .field(v-for="(question, index) in questions")
                            label= "#{{ index + 1 }}"
                            .movable-input
                                .ui.icon.input
                                    input.form-control(v-bind:name="'questions[' + index + ']'", type="text", v-model="question.text", required, minlength=2)
                                    i.inverted.circular.trash.link.icon(v-on:click="remote(question)")
                                i(class="icon expand arrows alternate movable")
                        div
                    .ui.buttons.two
                        a.ui.button.blue(href="#", v-on:click="add")
                            i.add.icon
                            | Add question
                        button.ui.button.positive(type="submit", v-bind:disabled="questions.length === 0")
                            i.save.icon
                            | Save questions

block append scripts
    script.
        var vm = new Vue({
            el: '#question',
            data: {
                questions: !{JSON.stringify(channel.questions)},
                dragOptions: {
                    animation: 200,
                }
            },
            created: function () {
                // `this` указывает на экземпляр vm
                console.log(this.questions)
            },
            methods: {
                add() {
                    this.questions.push({text: ""})
                },
                remote(question) {
                    this.questions.splice(this.questions.indexOf(question), 1)
                }
            }
        })