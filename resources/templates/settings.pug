extends layout/authorized_main

block authorized_content
    .ui.grid
        .alert.alert--gray.deactivate-bot-block
            div
                | Deactivate bot for
                a(href='https://' + user.team.domain + '.slack.com/messages/' + channel.id + '/details' target="blank")= " #" + channel.name
                |  channel
            code
                span= "/kick "
                a= "@daily_standup"

        form.ui.form(method='post').two.column.large.screen.only.row#form
            .column.ui
                h3.ui.header= "Stan-up settings"
                .field(class=errors.timezone && errors.timezone.errors ? 'error' : '')
                    label
                        span= 'Locale timezone'
                        span.error= errors.timezone && errors.timezone.errors ? errors.timezone.errors[0] : ''
                    select.ui.large.dropdown.search.form-control(name="timezone")
                        each timezone, index in timezones
                            - var selected = formData.timezone == timezone.id
                            option(value=timezone.id, selected=selected)= timezone.friendlyLabel
                .field(class=errors.start && errors.start.errors ? 'error' : '')
                    label
                        span= 'Start meeting (locale time)'
                        span.error= errors.start && errors.start.errors ? errors.start.errors[0] : ''
                    .ui.input.large
                        input.form-control(name="start", type="time", step="60", value=formData.start)
                .field(class=errors.duration && errors.duration.errors ? 'error' : '')
                    label
                        span= 'Duration'
                        span.error= errors.duration && errors.duration.errors ? errors.duration.errors[0] : ''
                    .ui.right.labeled.input.large
                        input.form-control(name="duration", type="number", step="1", value= formData.duration)
                        .ui.basic.label= "minutes"
                .field
                    label= 'Days'
                    div
                        each weekDay in weekDays
                            .ui.checkbox
                                input(type="checkbox")
                                label= weekDay
                button.ui.large.button.fluid.positive(type="submit", v-bind:disabled="questions.length === 0")
                    i.save.icon
                    | Save settings
            .column
                h3.ui.header= "Questions"
                draggable(:list="questions", v-bind="dragOptions", handle=".icon.movable")
                    .field(v-for="(question, index) in questions", v-bind:class="{ error: errors[index] && errors[index].children && errors[index].children.text.errors }")
                        label
                            span= "#{{ index + 1 }}"
                            span.error= "{{ errors[index] && errors[index].children ? errors[index].children.text.errors[0] : '' }}"
                        .movable-input
                            div
                                input(type="hidden", v-if="question.id", v-bind:name="'questions[' + index + '][id]'", v-model="question.id")
                                .ui.action.left.icon.input.large
                                    i.icon.arrows.alternate.vertical.link.movable
                                    input.form-control(type="text", v-bind:name="'questions[' + index + '][text]'", v-model="question.text", required, minlength=2)
                                    .ui.icon.button(v-on:click="remote(question)")
                                        i.trash.icon
                            .defined-responses
                                .ui.input.mini
                                    input
                    div
                .field
                    label &nbsp
                    a.ui.large.button.blue.fluid(href="#", v-on:click="add")
                        i.add.icon
                        | Add question
                if errors.questions && errors.questions.errors
                    each k, err in errors.questions.errors
                        div= "{{ err }}"

block append scripts
    script.
        var vm = new Vue({
            el: '#form',
            data: {
                questions: !{JSON.stringify(formData.questions)},
                errors: !{JSON.stringify(errors.questions ? errors.questions.children : {})},
                dragOptions: {
                    animation: 200,
                }
            },
            methods: {
                add(e) {
                    e.preventDefault();
                    this.questions.push({text: ""})
                },
                remote(question) {
                    this.questions.splice(this.questions.indexOf(question), 1)
                }
            }
        })
        $('select.dropdown.search').dropdown({fullTextSearch: true});
