extends layout/authorized_main

block authorized_content
    if standUpList.length === 0
        .no-meetings No meetings üê•
    else
        #list
            each standUp in standUpList
                .ui.items.stand-up
                    .stand-up__date
                        div= intl.format(standUp.standUp.start)
                        if standUp.isInProgress
                            a.ui.teal.label= 'In progress'
                    each userAnswers in standUp.answers
                        .item.stand-up-item
                            img.stand-up-item__image(src=userAnswers.user.profile.image_48).img-thumbnail
                            .stand-up-item__content
                                .stand-up-item__name= userAnswers.user.profile.real_name + ' (' + userAnswers.user.name + ')'
                                if userAnswers.answers.length === 0
                                    div= 'No answers üê•'
                                each answer, index in userAnswers.answers
                                    .stand-up-item__question-answer(class= 'stand-up-item__question-answer--'+index)
                                        .stand-up-item__question= answer.question.text
                                        if answer.answerMessage
                                            .stand-up-item__answer !{ answer.formatAnswerMessage }
        #pagination
            paginate(
            v-model="page",
            :page-count="pageCount",
            :click-handler="handler",
            :prev-text="'Prev'",
            :next-text="'Next'",
            :container-class="'ui pagination menu'",
            :page-class="'item'",
            :prev-class="'item'",
            :next-class="'item'",
            )
block append scripts
    link(rel='stylesheet' href='https://afeld.github.io/emoji-css/emoji.css')
    script.
        var url = new URL(location.href);
        let page = parseInt(url.searchParams.get('page')) || 1

        var vm = new Vue({
            el: '#pagination',
            data: {
                pageCount: #{ pageCount },
                page: page,
            },
            methods: {
                handler: function (page) {
                    url.searchParams.has('page') ? url.searchParams.set('page', page) : url.searchParams.append('page', page);
                    location.href = url.href
                }
            }
        })
